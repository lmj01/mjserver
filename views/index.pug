doctype html
html(lang="en")
    include layout/head.pug
    body
        .d-flex
            form.index-login.m-2(action="#", method="post")
                .my-2 
                    label.form-label(for="name") enter name:
                    input.form-control(type="text" id="name" name="name")
                .my-2
                    label.form-label(for="password") enter password:
                    input.form-control(type="password" id="password" name="password")
                .d-flex.my-2
                    button#btnSubmit.btn.btn-primary.w-auto.mx-auto(type="button") Login
            .file-area.m-2
                .row.d-flex.m-2
                    label(for="singleFile") Single File
                    input#singleFile.form-control(type="file")
                .row.d-flex.m-2
                    label(for="multiFile") Multiple File
                    input#multiFile.form-control(type="file", multiple=true)
        .test-api.d-flex.m-2
            .w-50 
                .btn-api-area
                    button#btnProfile get user profile
                    button#btnGetPackageJson get package json 
                    button#btnGetPackageStream get package Buffer
                    button#btnAudio transcode audio
                    button#btnInitDefault init user
                    button#btnUserAll get all user
                    button#btnPhotoTest photo test
            .w-50
                .row.d-flex.m-2
                    label.form-label user list
                    select#selectUserList.col-6.form-select
        .d-flex 
            a.m-2(href="/api-doc/user") ApiDoc user 
            a.m-2(href="/api-doc/auth") ApiDoc auth 
            a.m-2(href="/register") Register
            a.m-2(href="/admin") Admin
        
        include layout/foot.pug

        script(type='module').
            import { postLogin, getProfile, getFilePackage, authToken, postAudioTranscode, postFile, postListFile, getUserInit } from './api.mjs';
            document.getElementById('btnSubmit').addEventListener('click', () => {
                const data = {
                    name: document.getElementById('name').value,
                    password: document.getElementById('password').value,
                }
                postLogin(JSON.stringify(data)).then(res => {
                    if (res.status == 200) {
                        const result = JSON.parse(res.response);
                        localStorage.setItem(authToken, result.access_token || '');
                    } else {
                        console.log(res.response);
                    }
                });   
            });
            document.getElementById('btnProfile').addEventListener('click', () => {
                getProfile().then(res => {
                    if (res.status == 200) {
                        const result = JSON.parse(res.response);
                    } else {
                        console.log(res.response);
                    }
                })
            });
            document.getElementById('btnGetPackageJson').addEventListener('click', () => {
                getFilePackage(1).then(res => {
                    if (res.status == 200) {
                        const result = JSON.parse(res.response);
                    } else {
                        console.log(res.response);
                    }
                })
            });
            document.getElementById('btnGetPackageStream').addEventListener('click', () => {
                getFilePackage(2).then(res => {
                    if (res.status == 200) {
                        const result = JSON.parse(res.response);
                    } else {
                        console.log(res.response);
                    }
                })
            });
            document.getElementById('btnAudio').addEventListener('click', () => {
                postAudioTranscode().then(res => {
                    if (res.status == 200) {
                        const result = JSON.parse(res.response);
                    } else {
                        console.log(res.response);
                    }
                })
            });
            document.getElementById('btnInitDefault').addEventListener('click', () => {
                getUserInit().then(res => {
                    if (res.status == 200) {
                        const result = JSON.parse(res.response);
                    } else {
                        console.log(res.response);
                    }
                })
            });
            document.getElementById('singleFile').addEventListener('change', (event) => {
                const file = event.target.files[0];
                const formData = new FormData();
                formData.append('file', file, file.name);
                formData.append('name', file.name);
                postFile(formData).then(res => {
                    if (res.status == 200) {
                        const result = JSON.parse(res.response);
                    } else {
                        console.log(res.response);
                    }
                })
            });
            document.getElementById('multiFile').addEventListener('change', (event) => {
                const files = event.target.files;
                const formData = new FormData();
                for (let i = 0; i < files.length; i++) 
                    formData.append('files', files[i], files[i].name);
                formData.append('name', 'multiFiles name');
                postListFile(formData).then(res => {
                    if (res.status == 200) {
                        const result = JSON.parse(res.response);
                    } else {
                        console.log(res.response);
                    }
                })
            });
        script(type='module').
            const eventSource = new EventSource('/api/sse');
            eventSource.onmessage = function(data) {
                console.log('event-message', JSON.parse(data));
            };
            eventSource.addEventListener('see', ({data}) => {
                console.log('event', JSON.parse(data));
            });
            setTimeout(() => eventSource.close(), 1000 * 10);
        script(type='module').
            const socket = new WebSocket('ws://localhost:9210'
                //- , ['protocolOne','protocolTwo']
            );
            socket.onopen = (e) => {
                console.log('open')
                socket.send(JSON.stringify({
                    event: 'identity',
                    data: 1,
                }));
                socket.send(JSON.stringify({
                    event: 'events',
                    data: 'test',
                }))
            }
            socket.onmessage = (e) => {
                console.log(e.data)
            }
            socket.onerror = (e) => {
                console.log('error', e);
            }
        script(type='module').
            import { runTest } from './api.test.mjs';
            runTest();